'''Множества -> set()'''

# изменяемый, неупорядоченный, неиндексируемый, итерируемый тип данных
's = set(a)' # создание пустого множества
s = {1, 2, 3}
s1 = {'hi', 'hello', 'world'}
s2 = {1, 2, 3, 'hello', 'world'}
# множество принимает только неизменяемые типы данных
#s = set({1:'a', 2:'b'})
#s = set([1:'a', 2:'b'])



'''Методы множеств'''

s.add('элемент') #-> добавляет элемент во множество, в случайное место ,если добавляем tuple, 
               #то все его элементы должны быть неизменяемыми
s = {1, 2, 3}
s.add('hello')
print(s)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s.update('последовательность') # -> добавляет элементы из последовательности во множества 
                             #(добавляет по одному - "hello" -> 'h', 'e', 'l', 'o')
s = {1, 2, 3}
s.update(['hello'])
print(s)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s.clear() # ->  очищает множество

s = {1, 2, 3}
s.clear() 
print(s)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s.discard('элемент') # -> удаляет элемент из множества 
                     # (не выдает ошибку, если удаляемый элемент не существует)
s = {1, 2, 3, 4, 7}
s.discard(7)
print(s) # -> '1', '2', '3', '4'

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s.remove('элемент') # -> удаляет элемент из множества 
                  # (выдает ошибку, если удаляемый элемент не существует)
s = {1, 2, 3, 4, 7}
s.remove(7)
print(s) # -> '1', '2', '3', '4'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s.pop() # -> удаляет рандомный элемент из множества (чаще всего первый)

s = {1, 2, 3}
s.pop() 
print(s)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s1.difference(s2) # -> выводит значения которые есть в s1, но нет в s2

s1 = {1, 2, 3}
s2 = {1, 2, 5}
print(s1.difference(s2)) # -> '3' (и для слов и для чисел)
print(s1 - s2) # -> '3' (и для слов и для чисел)

s.difference_update() # -> то же самое, но перезаписывает множество

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s1.summetric_difference(s2) # -> выводит значения которые есть в s1 и нет s2, 
                            # так же те что есть в s2, но нет в s1, сразу           
s1 = {1, 2, 3, 4, 7, 8}
s2 = {1, 2, 5, 4, 7}
print(s1.summetric_difference(s2)) # -> '3', '8', '5' (и для слов и для чисел)

s.summetric_difference_update() # -> то же самое, но перезаписывает множество

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s1.intersection(s2) # -> выводит одинаковые элементы обоих множеств

s1 = {1, 2, 3, 4, 7, 8}
s2 = {1, 2, 5, 4, 7}
print(s1.intersection(s2)) # -> '1', '2', '4', '7' (и для слов и для чисел)
print(s1 & s2) # -> '1', '2', '4', '7' (и для слов и для чисел)

s.intersection_update() # -> то же самое, но перезаписывает множество

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s1.union(s2) # -> соединяет оба множества (похожте элименты не дублируются)

s1 = {1, 2, 3, 4, 7}
s2 = {1, 2, 5, 4, 7}
print(s1.union(s2)) # -> '1', '2', '3', '4', '5', '7' (и для слов и для чисел)
print(s1 | s2) # -> '1', '2', '3', '4', '5', '7' (и для слов и для чисел)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s1.isdisjoin(s2) # -> если есть похожие элементы - выдает False, если нет -  True

s1 = {1, 2, 3, 4, 7, 8}
s2 = {1, 2, 5, 4, 7}

print(s1.isdisjoin(s2))

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

s.issuperset()
s.issubset()